//
// UserControllerAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class UserControllerAPI {
    /**
     addUserMedicines
     
     - parameter assignUserMedicineRequestDTO: (body) assignUserMedicineRequestDTO 
     - parameter _id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func addUserMedicinesUsingPOST(assignUserMedicineRequestDTO: AssignUserMedicineRequestDTO, _id: String, completion: @escaping ((_ data: CommonResponseOfboolean?,_ error: Error?) -> Void)) {
        addUserMedicinesUsingPOSTWithRequestBuilder(assignUserMedicineRequestDTO: assignUserMedicineRequestDTO, _id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     addUserMedicines
     - POST /users/{id}
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{output=none}]
     
     - parameter assignUserMedicineRequestDTO: (body) assignUserMedicineRequestDTO 
     - parameter _id: (path) id 

     - returns: RequestBuilder<CommonResponseOfboolean> 
     */
    open class func addUserMedicinesUsingPOSTWithRequestBuilder(assignUserMedicineRequestDTO: AssignUserMedicineRequestDTO, _id: String) -> RequestBuilder<CommonResponseOfboolean> {
        var path = "/users/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters = JSONEncodingHelper.encodingParameters(forEncodableObject: assignUserMedicineRequestDTO)

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CommonResponseOfboolean>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: true)
    }

    /**
     getUserMedicines
     
     - parameter _id: (path) id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUserMedicinesUsingGET(_id: String, completion: @escaping ((_ data: CommonResponseOfListOfUserMedicineDAO?,_ error: Error?) -> Void)) {
        getUserMedicinesUsingGETWithRequestBuilder(_id: _id).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     getUserMedicines
     - GET /users/{id}
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{output=none}]
     
     - parameter _id: (path) id 

     - returns: RequestBuilder<CommonResponseOfListOfUserMedicineDAO> 
     */
    open class func getUserMedicinesUsingGETWithRequestBuilder(_id: String) -> RequestBuilder<CommonResponseOfListOfUserMedicineDAO> {
        var path = "/users/{id}"
        let _idPreEscape = "\(_id)"
        let _idPostEscape = _idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{id}", with: _idPostEscape, options: .literal, range: nil)
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CommonResponseOfListOfUserMedicineDAO>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     getUsers
     
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getUsersUsingGET(completion: @escaping ((_ data: CommonResponseOfListOfUserDTO?,_ error: Error?) -> Void)) {
        getUsersUsingGETWithRequestBuilder().execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     getUsers
     - GET /users
     - API Key:
       - type: apiKey Authorization 
       - name: JWT
     - examples: [{output=none}]

     - returns: RequestBuilder<CommonResponseOfListOfUserDTO> 
     */
    open class func getUsersUsingGETWithRequestBuilder() -> RequestBuilder<CommonResponseOfListOfUserDTO> {
        let path = "/users"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<CommonResponseOfListOfUserDTO>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
